{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\login\\\\src\\\\Utils\\\\PublicRoute.js\";\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { getToken } from \"./Common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PublicRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: probs => {\n      return !getToken() ? /*#__PURE__*/_jsxDEV(Component, { ...probs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/Dashboard\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PublicRoute;\nexport default PublicRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"sources":["C:/Users/HP/login/src/Utils/PublicRoute.js"],"names":["React","Redirect","Route","getToken","PublicRoute","component","Component","rest","probs","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,QAAT,QAAyB,UAAzB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AACzD,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,aAAO,CAACL,QAAQ,EAAT,gBACL,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,cADK,gBAGL,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA,cAHF;AAKD;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAbD;;KAAML,W;AAeN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { getToken } from \"./Common\";\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(probs) => {\r\n        return !getToken() ? (\r\n          <Component {...probs} />\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/Dashboard\" }} />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n"]},"metadata":{},"sourceType":"module"}